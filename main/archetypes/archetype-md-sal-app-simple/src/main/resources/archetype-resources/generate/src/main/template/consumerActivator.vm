/*
 * Copyright (c) 2013 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
package ${package}.consumer;

import java.util.HashMap;
import java.util.Map;

import org.opendaylight.controller.sal.binding.api.AbstractBindingAwareConsumer;
import org.opendaylight.controller.sal.binding.api.BindingAwareBroker.ConsumerContext;
import org.opendaylight.yang.gen.v1.opendaylight.sample.rev140407.${capitalApp}Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This activator is generated by code generator. It will initialize an app consumer
 * which will use YANG based RPC.
 */

public class ConsumerActivator extends AbstractBindingAwareConsumer{

  private static final Logger log = LoggerFactory.getLogger(ConsumerActivator.class);

  @Override
  public void onSessionInitialized(ConsumerContext session) {
    log.info("MD SAL sample consumer Session initialized");
    ${capitalApp}Service service = session.getRpcService(${capitalApp}Service.class);
    if(service == null) {
      log.error("MD SAL sample consumer startup failed. RPC service is not available to use.");
      return;
    }
    AppConsumer consumer = new AppConsumer(service);
    // Create one sample entry in data store
    Map<String, String> data = new HashMap<>();
    #foreach( $field in $fields )
    data.put("${field}", "${field} from consumer");
    #end
    consumer.createEntry(data);
  }

 
	

}
